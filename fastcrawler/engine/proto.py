from typing import Protocol, List

import pydantic


class ProxySetting(pydantic.BaseModel):
    protocol: str = "http://"
    server: str
    port: int
    username: str | None = None
    password: str | None = None


class EngineProto(Protocol):
    def __init__(self, cookie: List[dict], header: dict, useragent: dict, proxy: ProxySetting): ...
    async def __aenter__(self): ...
    async def __aexit__(self, exc_type, exc_val, exc_tb): ...
    async def setup(self) -> None: ...
    async def teardown(self) -> None: ...
    async def base(self, url: pydantic.AnyUrl, data: dict) -> str: ...
    async def get_all(self, urls: List[pydantic.AnyUrl]) -> str: ...
    async def post_all(self, urls: List[pydantic.AnyUrl], datas: List[dict]) -> str: ...
    async def put_all(self, urls: List[pydantic.AnyUrl], datas: List[dict]) -> str: ...
    async def delete_all(self, urls: List[pydantic.AnyUrl], datas: List[dict]) -> str: ...
